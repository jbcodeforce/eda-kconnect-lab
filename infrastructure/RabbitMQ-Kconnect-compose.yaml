version: '3.7'
services:
    zookeeper:
        image: strimzi/kafka:latest-kafka-2.5.0
        command: [
          "sh", "-c",
          "bin/zookeeper-server-start.sh config/zookeeper.properties"
        ]
        ports:
          - "2181:2181"
        environment:
          LOG_DIR: /tmp/logs
        networks:
          - kafka-network
    kafka:
        image: strimzi/kafka:latest-kafka-2.5.0
        command: [
          "sh", "-c",
          "bin/kafka-server-start.sh config/server.properties --override listeners=$${KAFKA_LISTENERS} --override advertised.listeners=$${KAFKA_ADVERTISED_LISTENERS} --override zookeeper.connect=$${KAFKA_ZOOKEEPER_CONNECT}"
        ]
        depends_on:
          - zookeeper
        ports:
          - "9092:9092"
        environment:
          LOG_DIR: "/tmp/logs"
          KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://localhost:9092
          KAFKA_LISTENERS: PLAINTEXT://0.0.0.0:9092
          KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
        networks:
          -  kafka-network
    # credentials guest:guest
    rabbitmq:
        hostname: rabbitmq
        image: rabbitmq:3-management
        ports:
            - '15672:15672'
            - '5672:5672'
        environment:
            RABBITMQ_DEFAULT_USER: rabbit-user
            RABBITMQ_DEFAULT_PASS: rabbit-pass
        volumes:
            - ./rabbitmq/enable_plugins:/etc/rabbitmq/enabled_plugins
    kconnect:
        hostname: kconnect
        image: ibmcase/kconnect:1.0.0
        ports:
            - '8083:8083'
    storeSaleGenerator:
        hostname: storeapp
        image: ibmcase/store-sale-producer:1.0.0
        build:
            context: .
            dockerfile: src/main/docker/Dockerfile.${QUARKUS_MODE:-jvm}
        ports:
            - '8080:8080'
        environment:
            AMQP_HOST: rabbitmq
        networks:
            - kafka-network
networks:
    kafka-network:
        name: kafkanet
        type: bridge